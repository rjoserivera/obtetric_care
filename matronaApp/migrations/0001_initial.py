# Generated by Django 5.2.7 on 2025-10-13 01:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gestionApp', '0001_initial'),
        ('medicoApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FichaObstetrica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ficha', models.CharField(max_length=20, unique=True, verbose_name='Número de Ficha')),
                ('nombre_acompanante', models.CharField(blank=True, max_length=200, verbose_name='Nombre del Acompañante')),
                ('numero_gestas', models.IntegerField(default=0, help_text='Número total de embarazos', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Número de Gestas')),
                ('numero_partos', models.IntegerField(default=0, help_text='Número total de partos', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Número de Partos')),
                ('partos_vaginales', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Partos Vaginales')),
                ('partos_cesareas', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Partos por Cesárea')),
                ('numero_abortos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Número de Abortos')),
                ('hijos_vivos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Hijos Vivos')),
                ('fecha_ultima_regla', models.DateField(blank=True, help_text='Fecha del primer día de la última menstruación', null=True, verbose_name='Fecha Última Regla (FUR)')),
                ('fecha_probable_parto', models.DateField(blank=True, help_text='Fecha estimada del parto', null=True, verbose_name='Fecha Probable de Parto (FPP)')),
                ('edad_gestacional_semanas', models.IntegerField(blank=True, help_text='Semanas completas de embarazo', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(42)], verbose_name='Edad Gestacional (Semanas)')),
                ('edad_gestacional_dias', models.IntegerField(blank=True, help_text='Días adicionales a las semanas', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Edad Gestacional (Días)')),
                ('peso_actual', models.DecimalField(blank=True, decimal_places=2, help_text='Peso de la paciente en kilogramos', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(200)], verbose_name='Peso Actual (kg)')),
                ('talla', models.DecimalField(blank=True, decimal_places=2, help_text='Estatura de la paciente en centímetros', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(220)], verbose_name='Talla (cm)')),
                ('descripcion_patologias', models.TextField(blank=True, help_text='Detalles adicionales sobre las patologías', verbose_name='Descripción Detallada de Patologías')),
                ('observaciones_generales', models.TextField(blank=True, help_text='Observaciones sobre el embarazo actual', verbose_name='Observaciones Generales')),
                ('antecedentes_relevantes', models.TextField(blank=True, help_text='Antecedentes médicos, quirúrgicos, alergias, etc.', verbose_name='Antecedentes Médicos Relevantes')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Última Modificación')),
                ('activa', models.BooleanField(default=True, help_text='Indica si la ficha está activa o cerrada', verbose_name='Ficha Activa')),
                ('matrona_responsable', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fichas_asignadas', to='gestionApp.matrona', verbose_name='Matrona Responsable')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichas_obstetricas', to='gestionApp.paciente', verbose_name='Paciente')),
                ('patologias', models.ManyToManyField(blank=True, related_name='fichas_con_patologia', to='medicoApp.patologias', verbose_name='Patologías Asociadas')),
            ],
            options={
                'verbose_name': 'Ficha Obstétrica',
                'verbose_name_plural': 'Fichas Obstétricas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='IngresoPaciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_ingreso', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha y Hora de Ingreso')),
                ('motivo_consulta', models.TextField(help_text='Descripción del motivo de ingreso', verbose_name='Motivo de Consulta')),
                ('edad_gestacional_sem', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(42)], verbose_name='Edad Gestacional (semanas)')),
                ('derivacion', models.CharField(blank=True, help_text='Hospital o servicio que deriva (si aplica)', max_length=200, verbose_name='Derivación')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones del Ingreso')),
                ('numero_ficha', models.CharField(max_length=20, unique=True, verbose_name='Número de Ficha de Ingreso')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingresos', to='gestionApp.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Ingreso de Paciente',
                'verbose_name_plural': 'Ingresos de Pacientes',
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.CreateModel(
            name='MedicamentoFicha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_medicamento', models.CharField(choices=[('Acido_Folico', 'Ácido Fólico'), ('Sulfato_Ferroso', 'Sulfato Ferroso'), ('Calcio', 'Calcio'), ('Aspirina', 'Aspirina'), ('Metildopa', 'Metildopa'), ('Insulina', 'Insulina'), ('Nifedipino', 'Nifedipino'), ('Otro', 'Otro')], max_length=100, verbose_name='Medicamento')),
                ('dosis', models.CharField(choices=[('1_mg', '1 mg'), ('5_mg', '5 mg'), ('10_mg', '10 mg'), ('50_mg', '50 mg'), ('100_mg', '100 mg'), ('250_mg', '250 mg'), ('500_mg', '500 mg'), ('1_g', '1 g'), ('Otra', 'Otra dosis')], max_length=50, verbose_name='Dosis')),
                ('via_administracion', models.CharField(choices=[('Oral', 'Oral'), ('Intramuscular', 'Intramuscular'), ('Intravenosa', 'Intravenosa'), ('Subcutanea', 'Subcutánea')], max_length=50, verbose_name='Vía de Administración')),
                ('frecuencia', models.CharField(choices=[('1_vez_dia', '1 vez al día'), ('2_veces_dia', '2 veces al día'), ('3_veces_dia', '3 veces al día'), ('Cada_8_horas', 'Cada 8 horas'), ('Cada_12_horas', 'Cada 12 horas'), ('SOS', 'SOS (según necesidad)')], max_length=50, verbose_name='Frecuencia')),
                ('fecha_inicio', models.DateField(help_text='Fecha en que inicia el tratamiento', verbose_name='Fecha de Inicio')),
                ('fecha_termino', models.DateField(help_text='Fecha en que finaliza el tratamiento', verbose_name='Fecha de Término')),
                ('observaciones', models.TextField(blank=True, help_text='Indicaciones especiales sobre la medicación', verbose_name='Observaciones')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('ficha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicamentos', to='matronaApp.fichaobstetrica', verbose_name='Ficha Obstétrica')),
            ],
            options={
                'verbose_name': 'Medicamento de Ficha',
                'verbose_name_plural': 'Medicamentos de Fichas',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='AdministracionMedicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_hora_administracion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha y Hora de Administración')),
                ('se_realizo_lavado', models.BooleanField(default=False, verbose_name='¿Se realizó lavado de manos?')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones de la Administración')),
                ('reacciones_adversas', models.TextField(blank=True, verbose_name='Reacciones Adversas Observadas')),
                ('administrado_exitosamente', models.BooleanField(default=True, verbose_name='¿Se administró exitosamente?')),
                ('motivo_no_administracion', models.TextField(blank=True, help_text='Completar solo si no se administró', verbose_name='Motivo de No Administración')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro en Sistema')),
                ('tens', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='administraciones_realizadas', to='gestionApp.tens', verbose_name='TENS que Administró')),
                ('medicamento_ficha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administraciones', to='matronaApp.medicamentoficha', verbose_name='Medicamento Asignado')),
            ],
            options={
                'verbose_name': 'Administración de Medicamento',
                'verbose_name_plural': 'Administraciones de Medicamentos',
                'ordering': ['-fecha_hora_administracion'],
            },
        ),
        migrations.AddIndex(
            model_name='fichaobstetrica',
            index=models.Index(fields=['numero_ficha'], name='matronaApp__numero__6ad75a_idx'),
        ),
        migrations.AddIndex(
            model_name='fichaobstetrica',
            index=models.Index(fields=['paciente', 'activa'], name='matronaApp__pacient_7cc52c_idx'),
        ),
        migrations.AddIndex(
            model_name='fichaobstetrica',
            index=models.Index(fields=['-fecha_creacion'], name='matronaApp__fecha_c_ce7cca_idx'),
        ),
        migrations.AddIndex(
            model_name='medicamentoficha',
            index=models.Index(fields=['ficha', 'activo'], name='matronaApp__ficha_i_e18c9f_idx'),
        ),
        migrations.AddIndex(
            model_name='administracionmedicamento',
            index=models.Index(fields=['medicamento_ficha', '-fecha_hora_administracion'], name='matronaApp__medicam_81588c_idx'),
        ),
        migrations.AddIndex(
            model_name='administracionmedicamento',
            index=models.Index(fields=['tens', '-fecha_hora_administracion'], name='matronaApp__tens_id_1ed7c8_idx'),
        ),
    ]
